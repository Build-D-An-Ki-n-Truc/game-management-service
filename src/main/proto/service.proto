syntax = "proto3";
option java_multiple_files = true;
package grpc;

message GameManagement {
  string id = 1;
  string eventId = 2;
  string name = 3;
  string image = 4;
  string type = 5;
  bool allowedItemTrade = 6;
  string tutorial = 7;
  string status = 8;
  int64 startTime = 9;
  int64 endTime = 10;
  int32 maxPlayers = 11;
  int32 duration = 12;
}

message GameManagementInfoRequest {
  string id = 1;
  string name = 2;
  string image = 3;
  string type = 4;
  bool allowedItemTrade = 5;
  string tutorial = 6;
  int64 startTime = 7;
  int64 endTime = 8;
  int32 maxPlayers = 9;
  int32 duration = 10;
  string eventId = 11;
}

message GameManagementStatusRequest {
  string id = 1;
  string status = 2;
}

message GameManagementGetRequest {
  string gameId = 1;
}
message GameManagementGetAllRequest {}
message GameManagementGetListByEventRequest {
  string eventId = 1;
}
message GameManagementQuestion {
  string text = 1;
  repeated string options = 2;
  int32 correctAnswer = 3;
}

message GameManagementAddRequest {
  string id = 1;
  string name = 2;
  string image = 3;
  string type = 4;
  bool allowedItemTrade = 5;
  string tutorial = 6;
  string status = 7;
  int64 startTime = 8;
  int64 endTime = 9;
  int32 maxPlayers = 10;
  int32 duration = 11;
  string eventId = 12;
  repeated GameManagementQuestion questions = 13;
}

message GameManagementResponse {
  bool finished = 1;
  string message = 2;
}

message GameManagementGetResponse {
  string id = 1;
  string name = 2;
  string image = 3;
  string type = 4;
  bool allowedItemTrade = 5;
  string tutorial = 6;
  string status = 7;
  int64 startTime = 8;
  int64 endTime = 9;
  int32 maxPlayers = 10;
  int32 duration = 11;
  bool finished = 12;
  string message = 13;
  string eventId = 14;
}
message GameManagementGetAllResponse {
  repeated GameManagementGetResponse games = 1;
  bool finished = 2;
  string message = 3;
}

message GameManagementShakeRequest {
  string userId = 1;
  string gameId = 2;
  int32 shakeRand = 3;
  int64 shakeAccumulate = 4;
}
message GameManagementShakeResponse {
  bool finished = 1;
  string message = 2;
  int32 finalResult = 3;
}
message GameManagementShakeRewardRequest {
  string userId = 1;
  string gameId = 2;
  string rewardId = 3;
}
message GameManagementShakeRewardResponse {
  bool finished = 1;
  string message = 2;
}

message GameManagementQuizQuestionsRequest {
  string gameId = 1;
}
message GameManagementQuizQuestionsResponse {
  bool finished = 1;
  string message = 2;
  repeated GameManagementQuestion questions = 3;
}

message GameManagementQuizAnswerRequest {
  string gameId = 1;
  string userId = 2;
  repeated int32 answers = 3;
  int32 score = 4;
}
message GameManagementQuizAnswerResponse {
  bool finished = 1;
  string message = 2;
}

service GameManagementService {
  rpc updateInfo(GameManagementInfoRequest) returns (GameManagementResponse);
  rpc updateStatus(GameManagementStatusRequest) returns (GameManagementResponse);
  rpc getAll(GameManagementGetAllRequest) returns (GameManagementGetAllResponse);
  rpc getListByEvent(GameManagementGetListByEventRequest) returns (GameManagementGetAllResponse);
  rpc getOne(GameManagementGetRequest) returns (GameManagementGetResponse);
  rpc add(GameManagementAddRequest) returns (GameManagementResponse);
  rpc shake(GameManagementShakeRequest) returns (GameManagementShakeResponse);
  rpc updateShakeReward(GameManagementShakeRewardRequest) returns (GameManagementShakeRewardResponse);
  rpc getQuizQuestions(GameManagementQuizQuestionsRequest) returns (GameManagementQuizQuestionsResponse);
  rpc updateQuizAnswers(GameManagementQuizAnswerRequest) returns (GameManagementQuizQuestionsResponse);
}